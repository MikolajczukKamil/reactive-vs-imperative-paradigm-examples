"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[792],{64:()=>{class CustomElement extends HTMLElement{attributeChangedCallback(e,t,n){try{this[e]=n}catch(c){console.error("CustomElement.attributeChangedCallback",{name:e,value:n},c)}}constructor(e){super(),this.template=void 0,this.connected=!1,this.template=function(e){const t=document.createElement("div");return t.innerHTML=e,t}(e)}bindChangeValue(e,t){const n=this.querySelector(e);n.addEventListener("change",(()=>{t(n)}))}querySelector(e){return this.connected?super.querySelector(e):this.template.querySelector(e)}querySelectorAll(e){return this.connected?super.querySelectorAll(e):this.template.querySelectorAll(e)}connectedCallback(){this.connected=!0,this.append(...Array.from(this.template.children))}disconnectedCallback(){}}e="app-root",t=class AppComponent extends CustomElement{constructor(){super('<input id="test-input"/> <ul id="test-list"></ul> ')}connectedCallback(){super.connectedCallback();const e=this.querySelector("#test-input");e.addEventListener("change",(()=>{this.updateList(e.value.split(""))}))}updateList(e){this.querySelector("#test-list").replaceChildren(...e.map((e=>{const t=document.createElement("li");return t.innerText=e,t})))}},customElements.get(e)&&location.reload(),customElements.define(e,t);var e,t}},e=>{var t;t=64,e(e.s=t)}]);